version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/devtrackr
      - SPRING_PROFILES_ACTIVE=dev
      - FRONTEND_URL=http://localhost:3000
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,prometheus,metrics
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS=always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      mongo:
        condition: service_started
    networks:
      - devtrackr-network

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - devtrackr-network
      
  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
    networks:
      - devtrackr-network
    depends_on:
      - backend
      
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - devtrackr-network
    depends_on:
      - prometheus

networks:
  devtrackr-network:
    driver: bridge

volumes:
  mongo-data:
  prometheus-data:
  grafana-data: